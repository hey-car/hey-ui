// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input Snapshots tests should match callback methods 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <div
              class="input"
            >
              <input
                class="input"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            />
          </fieldset>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <div
            class="input"
          >
            <input
              class="input"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          />
        </fieldset>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match disabled state 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component disabled"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input"
                disabled=""
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component disabled"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input"
              disabled=""
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match error hint 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
        </div>
        <span
          class="sub hint"
        >
          This is the placeholder for error note
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
      </div>
      <span
        class="sub hint"
      >
        This is the placeholder for error note
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match error hint/state 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component hasError"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
        </div>
        <span
          class="sub error"
          role="alert"
        >
          This is the placeholder for error note
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component hasError"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
      </div>
      <span
        class="sub error"
        role="alert"
      >
        This is the placeholder for error note
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match fullWidth 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component fullWidth"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component fullWidth"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match label and value props 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component"
      >
        <div
          class="inner filled"
        >
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component"
    >
      <div
        class="inner filled"
      >
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Snapshots tests should match left and right icons 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="component hasLeftIcon"
      >
        <div
          class="inner filled"
        >
          <div
            class="addons leftIcon"
          >
            🚗
          </div>
          <div
            class="inputWrapper"
          >
            <label
              class="label"
            >
              <span
                class="labelInner"
              >
                Label
              </span>
            </label>
            <div
              class="input"
            >
              <input
                aria-label="Label"
                class="input hasLeftIcon"
                type="text"
                value="value"
              />
            </div>
          </div>
          <fieldset
            aria-hidden="true"
            class="fieldset"
          >
            <legend
              class="legend"
            >
              <span>
                Label
              </span>
            </legend>
          </fieldset>
          <div
            class="addons rightIcon"
          >
            🚗
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="component hasLeftIcon"
    >
      <div
        class="inner filled"
      >
        <div
          class="addons leftIcon"
        >
          🚗
        </div>
        <div
          class="inputWrapper"
        >
          <label
            class="label"
          >
            <span
              class="labelInner"
            >
              Label
            </span>
          </label>
          <div
            class="input"
          >
            <input
              aria-label="Label"
              class="input hasLeftIcon"
              type="text"
              value="value"
            />
          </div>
        </div>
        <fieldset
          aria-hidden="true"
          class="fieldset"
        >
          <legend
            class="legend"
          >
            <span>
              Label
            </span>
          </legend>
        </fieldset>
        <div
          class="addons rightIcon"
        >
          🚗
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
