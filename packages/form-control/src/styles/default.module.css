@import '../../../themes/src/default.css';

:root {
  /* colors */
  --form-control-base-border-color: var(--color-neutral-500);
  --form-control-hover-border-color: var(--color-neutral-600);
  --form-control-pressed-border-color: var(--color-primary-500);
  --form-control-min-height: 48px;
  --form-control-bg-backdrop-filter: unset;
  --form-control-label-color: var(--color-neutral-700);
  --form-control-hint-color: var(--color-neutral-700);

  /* error */
  --form-control-error-color: #d91d0b;
  --form-control-error-label-color: #546272;
  --form-control-error-shadow: none;
  --form-control-error-border-bottom: 1px solid #546272 /* disabled */;
  --form-control-disabled-bg-color: rgba(11, 31, 53, 0.15);
  --form-control-disabled-border-bottom: 1px dashed #b6bcc3;
  --form-control-disabled-color: #546272;
  --form-control-color: #0b1f35;
  --form-control-bg-color: rgba(11, 31, 53, 0.07);

  /* paddings */
  --form-control-paddings: 0 12px;
  --form-control-xl-paddings: 0 16px;
  --form-control-labeled-s-paddings: 23px 12px 5px;
  --form-control-labeled-l-paddings: 32px 12px 12px;
  --form-control-labeled-xl-paddings: 38px 16px 14px;
  --form-control-sub-paddings: 0;

  /* disabled */
  --form-control-disabled-opacity: 1;
}

.component {
  font-family: var(--font-family-system);
  width: max-content;

  & .inner {
    min-height: var(--form-control-min-height);
  }

  & .hasLabel .input > * {
    padding: 28px 12px 8px;
  }

  & .label {
    top: calc(var(--form-control-min-height) / 2);
  }
}

.inner {
  display: flex;
  position: relative;
  min-height: 100%;
  backdrop-filter: var(--form-control-bg-backdrop-filter);
  transition: border 0.1s ease;
  box-sizing: border-box;
  outline: none;
  border-style: solid;
  border-width: 1px;
  border-color: var(--form-control-base-border-color);

  &:hover {
    border-color: var(--form-control-hover-border-color);
  }
}

.inputWrapper {
  flex-grow: 1;
  position: relative;
  overflow: hidden;
}

.input {
  height: 100%;
  display: flex;
  align-items: center;
  position: relative;
}

.input > * {
  padding: var(--form-control-paddings);
  font-family: var(--font-family-system);
}

/*
  Label
*/
.label {
  position: absolute;
  display: flex;
  align-items: center;
  left: var(--gap-m);
  color: var(--form-control-label-color);
  right: 0;
  transform-origin: left top;
  transform: translateY(-50%);
  transition-duration: 200ms;
  transition-property: color, transform;
  transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);

  @mixin typography-subheading-4;

  & .labelInner {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

.hiddenLabel {
  opacity: 0;
  height: 0;
  padding: var(--form-control-paddings);
  display: block;
  box-sizing: border-box;
}

/*
  Hint
*/
.hint {
  color: var(--form-control-hint-color);
}

.sub {
  display: block;
  margin-top: var(--gap-2xs);
  padding: var(--form-control-sub-paddings);
}

/*
  Full width
*/
.block {
  width: 100%;
}

/*
  Addons
*/
.addons {
  display: flex;
  flex-shrink: 0;
  align-items: center;
}

.leftAddons {
  padding-left: 12px;
}

.rightAddons {
  padding-right: 12px;
}

/*
  Disabled state
*/
.disabled {
  background-color: var(--form-control-disabled-bg-color);
  color: var(--form-control-disabled-color);
  opacity: var(--form-control-disabled-opacity);
}

/*
  Filled state
*/
.filled .label {
  transform: translateY(-100%) scale(0.875);
}

/*
  Focus state
*/
.focused:not(.disabled):before,
.hasError:before {
  transform: scaleY(2);
}

/*
  Error state
*/
.error {
  color: var(--form-control-error-color);
}

.hasError .label {
  color: var(--form-control-error-label-color);
}

.hasError {
  box-shadow: var(--form-control-error-shadow);
}

.hasError:before {
  border-bottom: var(--form-control-error-border-bottom);
}
