@import '../../../themes/src/default.css';

:root {
  /* colors */
  --form-control-base-border-color: var(--color-neutral-500);
  --form-control-hover-border-color: var(--color-neutral-600);
  --form-control-focused-border-color: var(--color-primary-500);
  --form-control-filled-border-color: var(--color-neutral-500);
  --form-control-min-height: 48px;
  --form-control-bg-backdrop-filter: unset;
  --form-control-label-color: var(--color-neutral-700);
  --form-control-hint-color: var(--color-neutral-700);
  --form-control-error-color: var(--color-error-500);
  --form-control-error-label-color: var(--color-error-500);
  --form-control-disabled-bg-color: var(--color-neutral-300);
  --form-control-disabled-color: var(--color-neutral-300);

  /* error */
  --form-control-disabled-border-bottom: 1px dashed #b6bcc3;
  --form-control-color: #0b1f35;
  --form-control-bg-color: rgba(11, 31, 53, 0.07);

  /* paddings */
  --form-control-paddings: 0 12px;
  --form-control-xl-paddings: 0 16px;
  --form-control-labeled-s-paddings: 23px 12px 5px;
  --form-control-labeled-l-paddings: 32px 12px 12px;
  --form-control-labeled-xl-paddings: 38px 16px 14px;
}

.component {
  font-family: var(--font-family-system);
  width: max-content;

  & .inner {
    min-height: var(--form-control-min-height);
  }

  /* & .hasLabel .input > * {
    padding: 28px 12px 8px;
  } */

  &.hasLeftIcon {
    & .label {
      left: var(--gap-xs);
    }
  }

  & .label {
    color: var(--form-control-label-color);
    top: calc(var(--form-control-min-height) / 2);
  }

  & .hint {
    color: var(--form-control-hint-color);
  }

  /*
    Disabled
  */
  &.disabled {
    color: var(--form-control-disabled-color);

    & .inner,
    & .inner:hover {
      & .fieldset {
        border-color: var(--form-control-disabled-bg-color);
      }

      & .label {
        color: var(--form-control-disabled-color);
      }
    }

    & .hint {
      color: var(--form-control-disabled-color);
    }
  }

  /*
    Error
  */
  &.hasError {
    & .inner,
    &:hover .inner {
      & .fieldset {
        border-color: var(--form-control-error-color);
      }

      /* & .label {
        color: var(--form-control-error-label-color);
      } */
    }
  }

  & .inner.focused {
    & .fieldset {
      border-color: var(--form-control-focused-border-color);
    }
  }
}

.inner {
  display: flex;
  position: relative;
  min-height: 100%;
  backdrop-filter: var(--form-control-bg-backdrop-filter);
  box-sizing: border-box;
  outline: none;

  /*
  transition: border 0.1s ease;
  border-style: solid;
  border-width: 1px;
  border-color: var(--form-control-base-border-color);

  &:hover {
    border-color: var(--form-control-hover-border-color);
  } */
}

.inputWrapper {
  flex-grow: 1;
  position: relative;

  /* overflow: hidden; */
}

.input {
  height: 100%;
  display: flex;
  align-items: center;
  position: relative;
}

.input > * {
  padding: var(--form-control-paddings);
  font-family: var(--font-family-system);
}

/*
  Label
*/
.label {
  position: absolute;
  display: flex;
  align-items: center;
  left: var(--gap-m);
  right: 0;

  /* transform-origin: left top; */
  transform: translateY(-50%);
  transition-duration: 200ms;

  /* transition-property: top, transform; */

  /* transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1); */

  /* max-width: calc(100% - 24px); */
  pointer-events: none;

  @mixin typography-subheading-4;

  & .labelInner {
    width: 100%;

    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

.hiddenLabel {
  opacity: 0;
  height: 0;
  padding: var(--form-control-paddings);
  display: block;
  box-sizing: border-box;
}

/*
  Full width
*/
.block {
  width: 100%;
}

/*
  Addons
*/
.addons {
  display: flex;
  flex-shrink: 0;
  align-items: center;
}

.leftIcon {
  padding-left: var(--gap-s);
}

.rightIcon {
  padding-right: var(--gap-xs);
}

.rightAddons {
  padding-right: var(--gap-m);
}

/*
  Filled state
*/
.filled .label {
  transform: translateY(-190%);

  @mixin typography-caption-2;
}

/*
  Focus state
*/
.focused:not(.disabled):before,
.hasError:before {
  transform: scaleY(2);
}

/*
  Hint
*/
.sub {
  display: block;
  padding-left: var(--gap-m);

  @mixin typography-caption-5;
}

/*
  Error state
*/
.error {
  color: var(--form-control-error-color);
}

.inner:hover {
  & .fieldset {
    border-color: var(--form-control-hover-border-color);
  }
}
.fieldset {
  text-align: left;
  position: absolute;
  inset: -6px -1px -1px;
  margin: 0;
  padding: 0 8px;

  pointer-events: none;

  transition: border 0.1s ease;
  border-radius: inherit;
  border-style: solid;
  border-width: 1px;
  border-color: var(--form-control-base-border-color);

  overflow: hidden;
  min-width: 0%;
}

.legend {
  float: unset;
  overflow: hidden;
  display: block;
  width: auto;
  padding: 0;
  height: 11px;
  font-size: 0.75em;
  visibility: hidden;
  max-width: 0.01px;
  transition: max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  white-space: nowrap;

  & > span {
    padding-left: 5px;
    padding-right: 10px;
    display: inline-block;
    opacity: 0;
    visibility: visible;
  }
}

.filled {
  & .fieldset {
    border-color: var(--form-control-filled-border-color);
    border-width: 1px;
  }

  & .legend {
    float: none;
    overflow: hidden;
    display: block;
    padding: 0;
    height: 11px;
    font-size: 0.75em;
    visibility: hidden;
    max-width: 100%;
    white-space: nowrap;
  }
}
